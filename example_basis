#!/usr/bin/python

import numpy as np

import group

def main():
    np.set_printoptions(suppress=True)
    prefs = [[0.,0.,0.], [0.,0.,1.], [1.,1.,0.], [1.,1.,1.]]
    #prefs = np.asarray(prefs)
    p2max = 4
    groups = []

    # initialize groups
    S = 1./np.sqrt(2.)
    #U3 = np.asarray([[S,0,S],[0,1,0],[S,0,-S]])
    #U2 = np.asarray([[S,S],[1.j*S,-1.j*S]])
#    U3 = np.identity(3)
#    U2 = np.identity(2)

    # cartesian basis
    U3 = np.asarray([[0,0,-1.],[1.j,0,0],[0,1,0]])
    U2 = np.asarray([[S,S],[1.j*S,-1.j*S]]) 

    for p2 in range(p2max):
        try:
            _g = group.TOh.read(p2=p2)
            if not np.allclose(_g.U3, U3) or not np.allclose(_g.U2, U2):
                raise IOError("redo computation")
        except IOError:
            _g = group.TOh(pref=prefs[p2], irreps=True, U3=U3, U2=U2)
            _g.save()
        groups.append(_g)
        #print("p^2 = %d" % p2)
        #print(_g.irrepsname)

    # calc coefficients
    print(" CMF ".center(40, "="))
    basis = group.TOhBasis(groups[0],jmax=3)
    print("display")
    basis.print_table()
    print("pandas")
    print basis.to_pandas(1)
    print("latex")
    basis.to_latex()

    # calc coefficients
    print(" MF 1 ".center(40, "="))
    basis = group.TOhBasis(groups[1],jmax=3)
    print("display")
    basis.print_table()
    #print("pandas")
    #basis.to_pandas(1)
    #print("latex")
    #basis.to_latex()

    # calc coefficients
    print(" MF 2 ".center(40, "="))
    basis = group.TOhBasis(groups[2],jmax=3)
    print("display")
    basis.print_table()
    #print("pandas")
    #basis.to_pandas(1)
    #print("latex")
    #basis.to_latex()

    # calc coefficients
    print(" MF 3 ".center(40, "="))
    basis = group.TOhBasis(groups[3],jmax=3)
    print("display")
    basis.print_table()
    #print("pandas")
    #basis.to_pandas(1)
    #print("latex")
    #basis.to_latex()


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
